name: Continuous Deployment

on:
    push:
        branches:
            - master

# NOTE: This workflow was ported from Travis.
# NOTE: Travis was using Ubuntu 14.04. Ubuntu 14.04 is not supportted by GitHub workflows. Ubuntu 20.04 is recommended.
# NOTE: Travis was using Clang 3.6. The earliest version support by Ubuntu 20.04 is Clang 6.0.
# NOTE: Travis was caching the clang package. APT package caching is not natively supported by GitHub actions/cache.
# NOTE: Travis was using Mac OS X 10.13.6 / Xcode 9.4.1 / LLVM 9.1.0
jobs:
    linux:
        runs-on: ${{matrix.os.genus}}
        strategy:
            fail-fast: false
            matrix:
                os: [{genus: ubuntu-20.04, family: linux}]
                compiler: [{cc: clang, cxx: clang++}]
                cmake_build_type: [Debug, Release]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: '3.7'
            - name: Install Ubuntu Package Dependencies
              run: |
                  sudo apt-get -qq update
                  sudo apt-get install -y clang-6.0
            - name: Install GoogleTest
              run: |
                  # check out pre-breakage version of googletest; can be deleted when
                  # issue 3128 is fixed
                  # git clone --depth=1 https://github.com/google/googletest.git External/googletest
                  mkdir -p External/googletest
                  cd External/googletest
                  git init
                  git remote add origin https://github.com/google/googletest.git
                  git fetch --depth 1 origin 0c400f67fcf305869c5fb113dd296eca266c9725
                  git reset --hard FETCH_HEAD
                  cd ../..
            - name: Update Glslang Sources
              run: |
                  ./update_glslang_sources.py
            - name: Build
              env:
                  CC: ${{matrix.compiler.cc}}
                  CXX: ${{matrix.compiler.cxx}}
              run: |
                  mkdir build && cd build
                  cmake -DCMAKE_BUILD_TYPE=${{matrix.cmake_build_type}} -DCMAKE_INSTALL_PREFIX=`pwd`/install ..
                  make -j4 install
            - name: Test
              run: |
                  cd build
                  ctest --output-on-failure &&
                  cd ../Test && ./runtests
            - name: Zip
              env:
                  ARCHIVE: glslang-master-${{matrix.os.family}}-${{matrix.cmake_build_type}}.zip
              run: |
                  cd build/install
                  zip ${ARCHIVE} \
                      bin/glslangValidator \
                      include/glslang/* \
                      lib/libGenericCodeGen${SUFFIX}.a \
                      lib/libglslang${SUFFIX}.a \
                      lib/libglslang-default-resource-limits${SUFFIX}.a \
                      lib/libHLSL${SUFFIX}.a \
                      lib/libMachineIndependent${SUFFIX}.a \
                      lib/libOGLCompiler${SUFFIX}.a \
                      lib/libOSDependent${SUFFIX}.a \
                      lib/libSPIRV${SUFFIX}.a \
                      lib/libSPVRemapper${SUFFIX}.a \
                      lib/libSPIRV-Tools${SUFFIX}.a \
                      lib/libSPIRV-Tools-opt${SUFFIX}.a
            - name: Deploy
              uses: ncipollo/release-action@v1
              with:
                  tag: master-tot
                  artifacts: ./build/install/glslang-master-${{matrix.os.family}}-${{matrix.cmake_build_type}}.zip
                  token: ${{ secrets.GITHUB_TOKEN }}
                  allowUpdates: true

    macos:
        runs-on: ${{matrix.os.genus}}
        strategy:
            fail-fast: false
            matrix:
                os: [{genus: macos-10.15, family: osx}]
                compiler: [{cc: clang, cxx: clang++}]
                cmake_build_type: [Debug, Release]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: '3.7'
            - name: Install GoogleTest
              run: |
                  # check out pre-breakage version of googletest; can be deleted when
                  # issue 3128 is fixed
                  # git clone --depth=1 https://github.com/google/googletest.git External/googletest
                  mkdir -p External/googletest
                  cd External/googletest
                  git init
                  git remote add origin https://github.com/google/googletest.git
                  git fetch --depth 1 origin 0c400f67fcf305869c5fb113dd296eca266c9725
                  git reset --hard FETCH_HEAD
                  cd ../..
            - name: Update Glslang Sources
              run: |
                  ./update_glslang_sources.py
            - name: Build
              env:
                  CC: ${{matrix.compiler.cc}}
                  CXX: ${{matrix.compiler.cxx}}
              run: |
                  mkdir build && cd build
                  cmake -DCMAKE_BUILD_TYPE=${{matrix.cmake_build_type}} -DCMAKE_INSTALL_PREFIX=`pwd`/install ..
                  make -j4 install
            - name: Test
              run: |
                  cd build
                  ctest --output-on-failure &&
                  cd ../Test && ./runtests
            - name: Zip
              env:
                  ARCHIVE: glslang-master-${{matrix.os.family}}-${{matrix.cmake_build_type}}.zip
              run: |
                  cd build/install
                  zip ${ARCHIVE} \
                      bin/glslangValidator \
                      include/glslang/* \
                      lib/libGenericCodeGen${SUFFIX}.a \
                      lib/libglslang${SUFFIX}.a \
                      lib/libglslang-default-resource-limits${SUFFIX}.a \
                      lib/libHLSL${SUFFIX}.a \
                      lib/libMachineIndependent${SUFFIX}.a \
                      lib/libOGLCompiler${SUFFIX}.a \
                      lib/libOSDependent${SUFFIX}.a \
                      lib/libSPIRV${SUFFIX}.a \
                      lib/libSPVRemapper${SUFFIX}.a \
                      lib/libSPIRV-Tools${SUFFIX}.a \
                      lib/libSPIRV-Tools-opt${SUFFIX}.a
            - name: Deploy
              uses: ncipollo/release-action@v1
              with:
                  tag: master-tot
                  artifacts: ./build/install/glslang-master-${{matrix.os.family}}-${{matrix.cmake_build_type}}.zip
                  token: ${{ secrets.GITHUB_TOKEN }}
                  allowUpdates: true
